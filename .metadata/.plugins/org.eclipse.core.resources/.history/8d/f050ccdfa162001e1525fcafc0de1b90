package com.taskmangement.taskproject.controller;

import java.util.List;

import javax.websocket.server.PathParam;

import org.hibernate.internal.build.AllowSysOut;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.taskmangement.taskproject.dto.TaskDto;
import com.taskmangement.taskproject.serviceImpl.TaskServiceImpl;

@RestController
@RequestMapping("/api/auth")
public class TaskController {

	@Autowired
	private TaskServiceImpl taskservice;
	
	@PostMapping("/{userid}/tasks")
	public ResponseEntity<TaskDto> savetask(@PathVariable(name="userid") long userid,@RequestBody TaskDto taskdto){
	return new ResponseEntity<>(taskservice.saveTask(userid, taskdto),HttpStatus.CREATED);
	}
	
	@GetMapping("/{userid}/task")
	public ResponseEntity<List<TaskDto>> getAll(@PathVariable(name="userid") long userid){
	return new ResponseEntity<>(taskservice.getAllTasks(userid),HttpStatus.OK);
	}
	
	@GetMapping("/{userid}/task/{taskid}")
	public ResponseEntity<TaskDto> getTask(@PathVariable(name="userid") long userid,@PathVariable(name="taskid")long taskid){
	return new ResponseEntity<>(taskservice.getTask(userid, taskid),HttpStatus.OK);
	}
	@DeleteMapping("/{userid}/task/{taskid}")
	public ResponseEntity<String> deleteTask(@PathVariable(name="userid") long userid,@PathVariable(name="taskid")long taskid){
		taskservice.deletTask(userid, taskid);
	return new ResponseEntity<>("delete the task successfully",HttpStatus.OK);
	}
	public String test() {
		System.out.println("hello git");
		return null;
		
	}
}
